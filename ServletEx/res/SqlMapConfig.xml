<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMapConfig
    PUBLIC "-//ibatis.apache.org//DTD SQL Map Config 2.0//EN"
    "http://ibatis.apache.org/dtd/sql-map-config-2.dtd">

<!-- <sqlMapConfig> ? : SQL 관련 설정 파일 -->
<sqlMapConfig>
	<properties resource="SqlMapConfig.properties" /> <!-- DB 연결 정보를 SqlMapConfig.properties 에 작성한 뒤 연결 -->
	
	<!-- ibatis 처리 위한 환경설정 부분 (디폴트 설정 쓰면 문제는 없음.) (요청 수, 세션 수, namespace 사용여부 등) -->
	<!-- useStatementNamespaces="false" 인 경우, sqlMap 호출 시 
	smc.insert("member.insertMember", mv); 의 member.insertMember를 id로 인식함 -->
	<settings cacheModelsEnabled="true" enhancementEnabled="true" 
		lazyLoadingEnabled="true" maxRequests="32" maxSessions="10"
		maxTransactions="5" useStatementNamespaces="true" /> <!-- useStatementNamespaces="true"로 하여야 <sqlMap> 태그의 namespace를 사용할 수 있음.  -->
	
	<!-- 길어지는 패키지 경로를 Alias로 지정 -->
	<!-- 형식) <typeAlias alias="alias명" type="클래스의 풀네임"/>	 -->
 	<typeAlias alias="memVO" type="kr.or.ddit.member.vo.MemberVO"/> 

	<!-- db 접속정보 설정 영역 DB와의 연결을 처리하는 부분 : SqlMapConfig.properties 내 설정한 DB 연결 정보 사용함. -->
	<!-- 
	★ <dataSource type="">종류
	1. SIMPLE => SimpleDataSourceFactory
		데이터소스를 제공하는 컨테이너가 없을 시, connection을 제공하기 위해 기본적으로 pooling 데이터소스 구현을 제공한다.
		이것은 iBATIS SimpleDataSource connection pooling을 기반으로 한다.

	2. DBCP => DbcpDataSourceFactory
	DataSource API를 통해 connection pooling 서비스를 제공하기 위해 DBCP를 사용한다.
	이 DataSource는 어플리케이션/웹 컨테이너가 DataSource 구현물을 제공하지 못하거나 standalone 어플리케이션을 구동할 때 이상적이다.

    3. JNDI => JndiDataSourceFactory
 	어플리케이션 컨테이너내 JNDI 컨텍스트로부터 DataSource 구현물을 가져와야 한다.
 	이것은 어플리케이션 서버를 사용중이고 컨테이너 관리 connection pool 과 DataSource 가 제공될 때 사용한다.
 	JDBC DataSource 구현물에 접근하기 위한 표준적인 방법은 JNDI 컨텍스트를 통하여 접근하는 것이다.
	-->
	<transactionManager type="JDBC">
		<dataSource type="SIMPLE">
			<property name="JDBC.Driver" value="${driver}" /> <!-- 직접 기술하여 처리 가능 <property name="JDBC.Driver" value="oracle.jdbc.driver.OracleDriver" /> -->
			<property name="JDBC.ConnectionURL" value="${url}" /> <!-- <properties resource="SqlMapConfig.properties" /> 를 기반으로 value 값에 properties 의 Key 값을 추가한다. -->
			<property name="JDBC.Username" value="${username}" />
			<property name="JDBC.Password" value="${password}" />
			<property name="Pool.MaximumActiveConnections" value="1"/> <!-- 커넥션 개수를 1개로 설정한다. -->
			<property name="Pool.MaximumIdleConnections" value="1"/>
		</dataSource>
	</transactionManager>

<!-- ★중요 (쿼리 XML 연결부분)★ -->
<!-- 실제 처리할 SQL 문은 xml 로 별도 생성 후 <sqlMap resource="경로명/파일명.xml"/> 를 사용하여 연결한다. 
	xml 분리 예) 마이페이지, Qna, 공지사항 등 (게시판 CRUD 별로 쿼리 분리)-->
	<sqlMap resource="sqlMap/member.xml" />
	<sqlMap resource="sqlMap/atchFile.xml" />
</sqlMapConfig>






